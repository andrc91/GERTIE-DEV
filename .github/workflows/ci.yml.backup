name: Camera System CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0 libsm6 libxext6 libxrender-dev libgomp1
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run unit tests with coverage
      run: |
        python -m pytest tests/unit/ -v --cov=shared --cov=slave --cov-report=xml --cov-report=term-missing --cov-fail-under=90
    
    - name: Test transform consistency
      run: |
        python -m pytest tests/unit/test_preview_capture_consistency.py -v
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-glx libglib2.0-0
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # Note: Integration tests would require camera hardware
    # For now, we just run the scripts in dry-run mode
    - name: Test capture scripts (dry run)
      run: |
        python scripts/capture_preview_frame.py --help || true
        python scripts/trigger_capture.py --help || true
        echo "âœ… Capture scripts are syntactically valid"

  style-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    
    - name: Install style checking tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Check code formatting with black
      run: |
        black --check --diff shared/ slave/ tests/ scripts/ || true
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff shared/ slave/ tests/ scripts/ || true
    
    - name: Lint with flake8
      run: |
        flake8 shared/ slave/ tests/ scripts/ --max-line-length=120 --ignore=E203,W503 || true
